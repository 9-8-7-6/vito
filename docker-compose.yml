services:
  # db:
  #   image: postgres:17
  #   environment:
  #     POSTGRES_DB: ${DATABASE_NAME}
  #     POSTGRES_USER: ${DATABASE_USERNAME}
  #     POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   env_file:
  #     - .env
  #   healthcheck:
  #     test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}" ]
  #     interval: 10s
  #     retries: 5
  #     start_period: 20s

  nginx:
    image: nginx:latest
    container_name: nginx-docker
    restart: always
    network_mode: host
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
  # depends_on:
  # - db
  # - rabbitmq

  # rabbitmq:
  #   restart: always
  #   image: rabbitmq:latest
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   expose:
  #     - "5672"
  #   environment:
  #     RABBITMQ_DEFAULT_VHOST: "/"
  #     RABBITMQ_DEFAULT_USER: "guest"
  #     RABBITMQ_DEFAULT_PASS: "guest"
  #   healthcheck:
  #     test: [ "CMD", "rabbitmqctl", "status" ]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    environment:
      REDIS_PORT: "6379"
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5

volumes:
  postgres_data:
  redis_data:
